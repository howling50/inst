#!/bin/bash

ORIG_USER=$(whoami)

# Detect distribution based on package manager utilities
if command -v pacman-mirrors &>/dev/null; then
    DISTRO="manjaro"
else
    DISTRO="arch"
fi

# Check for vanilla Arch snapshot configuration in fstab
if [ ! -f /etc/fstab ]; then
    echo "Error: /etc/fstab not found." >&2
    exit 1
fi

if grep -v '^[[:space:]]*#' /etc/fstab | grep -q -E '/\.snapshots[[:space:]]+|subvol=[^ ]*@\.snapshots'; then
    echo "Remove existing /.snapshots mount or @.snapshots subvolume from fstab before running script!" >&2
    exit 1
fi

# Print disk layout
lsblk

# Get target device
read -p "Enter root Btrfs device (e.g., /dev/sda1): " DISK
if [[ ! -e "$DISK" ]]; then
    echo "Device $DISK does not exist!" >&2
    exit 1
fi

# Install packages
echo "Installing required packages..."
case $DISTRO in
    "manjaro")
        sudo pacman -S btrfs-progs snapper grub-btrfs btrfs-assistant btrfsmaintenance --noconfirm --needed
        ;;
    "arch")
        sudo pacman -S btrfs-progs snapper grub-btrfs --noconfirm --needed
        if command -v yay &>/dev/null; then
            yay -S btrfs-assistant btrfsmaintenance --noconfirm --needed
        else
            echo "Yay not found - install AUR packages manually:"
            echo "yay -S btrfs-assistant btrfsmaintenance"
        fi
        ;;
esac

# Install snap-pac conditionally
read -p "Install snap-pac for automatic pre/post snapshots? [y/N] " -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    sudo pacman -S snap-pac --noconfirm --needed
fi

# Configure grub-btrfs
sudo systemctl enable grub-btrfsd.service && sudo systemctl start grub-btrfsd.service

# Cleanup existing snapshots
if mount | grep -q '/.snapshots'; then
    sudo umount /.snapshots
fi
sudo rm -rf /.snapshots

# Create snapper config
echo "Configuring snapper..."
sudo snapper -c root create-config /
sudo sed -i "s/^ALLOW_USERS=\"\"/ALLOW_USERS=\"$ORIG_USER\"/" /etc/snapper/configs/root
sudo sed -i 's/^TIMELINE_LIMIT_HOURLY="10"/TIMELINE_LIMIT_HOURLY="5"/' /etc/snapper/configs/root
sudo sed -i 's/^TIMELINE_LIMIT_DAILY="10"/TIMELINE_LIMIT_DAILY="7"/' /etc/snapper/configs/root
sudo sed -i 's/^TIMELINE_LIMIT_WEEKLY="0"/TIMELINE_LIMIT_WEEKLY="1"/' /etc/snapper/configs/root
sudo sed -i 's/^TIMELINE_LIMIT_MONTHLY="10"/TIMELINE_LIMIT_MONTHLY="0"/' /etc/snapper/configs/root
sudo sed -i 's/^TIMELINE_LIMIT_YEARLY="10"/TIMELINE_LIMIT_YEARLY="0"/' /etc/snapper/configs/root
sudo sed -i 's/^BACKGROUND_COMPARISON=.*/BACKGROUND_COMPARISON="no"/' /etc/snapper/configs/root
sudo sed -i 's/^NUMBER_LIMIT=.*/NUMBER_LIMIT="20"/' /etc/snapper/configs/root
sudo sed -i 's/^NUMBER_LIMIT_IMPORTANT=.*/NUMBER_LIMIT_IMPORTANT="5"/' /etc/snapper/configs/root
sudo sed -i 's/^EMPTY_PRE_POST_MIN_AGE=.*/EMPTY_PRE_POST_MIN_AGE="1800"/' /etc/snapper/configs/root

# Create Btrfs subvolume
sudo mkdir -p /mnt/btrfs
sudo mount "$DISK" /mnt/btrfs || exit 1
sudo btrfs subvolume delete /mnt/btrfs/@.snapshots 2>/dev/null
sudo btrfs subvolume create /mnt/btrfs/@snapshots
sudo umount /mnt/btrfs
sudo rmdir /mnt/btrfs

# Create mount point and set permissions
sudo mkdir -p /.snapshots
sudo chmod 750 /.snapshots
sudo chown :"$ORIG_USER" /.snapshots

# Update fstab
echo "Updating /etc/fstab..."
UUID=$(sudo blkid -o value -s UUID "$DISK")
if ! grep -q "@snapshots" /etc/fstab; then
    echo "UUID=$UUID /.snapshots btrfs defaults,ssd,discard,noatime,compress=no,space_cache=v2,subvol=@snapshots 0 0" | sudo tee -a /etc/fstab
fi

# Mount and create initial snapshot
sudo mount -a
echo "Creating initial snapshot..."
sudo snapper -c root create --description "Initial system state"

# Update grub config
echo "Generating GRUB configuration..."
sudo grub-mkconfig -o /boot/grub/grub.cfg

# Adding Snapper Support
echo "Adding Snapper Support..."
printf "[Unit]\nDescription=Regenerate grub-btrfs.cfg\n\n[Service]\nType=oneshot\nEnvironment=\"PATH=/sbin:/bin:/usr/sbin:/usr/bin\"\nEnvironmentFile=/etc/default/grub-btrfs/config\nExecStart=bash -c 'if [[ -z \$(/usr/bin/findmnt -n / | /usr/bin/grep --fixed-strings \".snapshots\") ]]; then if [ -s \"\${GRUB_BTRFS_GRUB_DIRNAME:-/boot/grub}/grub-btrfs.cfg\" ]; then /etc/grub.d/41_snapshots-btrfs; else \${GRUB_BTRFS_MKCONFIG:-grub-mkconfig} -o \${GRUB_BTRFS_GRUB_DIRNAME:-/boot/grub}/grub.cfg; fi; fi'\n" | sudo tee /etc/systemd/system/grub-btrfs-snapper.service > /dev/null
printf "[Unit]\nDescription=Monitors for new snapshots\n\n[Path]\nPathModified=/.snapshots\n\n[Install]\nWantedBy=multi-user.target\n" | sudo tee /etc/systemd/system/grub-btrfs-snapper.path > /dev/null
sudo systemctl daemon-reload && sudo systemctl enable --now grub-btrfs-snapper.path

echo "Setup complete! Reboot recommended."







