#!/bin/bash

set -euo pipefail

# ---------------------------
# Configuration
# ---------------------------
THRESHOLD=${1:-30}  # Configurable via command line
LOG_FILE="/home/howling/ext4_defrag.log"
LOCK_FILE="/tmp/ext4_defrag.lock"

# ---------------------------
# Functions
# ---------------------------
log() {
    local message="$(date +'%Y-%m-%d %H:%M:%S') - $1"
    echo "$message" | tee -a "$LOG_FILE" >/dev/null
    logger -t "ext4_defrag" "$message"
}

get_frag_score() {
    local mount_point="$1"
    local output exit_code
    output=$(sudo e4defrag -c "$mount_point" 2>&1)
    exit_code=$?
    if [[ $exit_code -ne 0 ]]; then
        log "ERROR: e4defrag -c failed for $mount_point (exit code $exit_code). Output: $output"
        echo ""
        return 1
    fi
    echo "$output" | sed -n 's/.*Fragmentation score[[:space:]]*:*[[:space:]]*\([0-9]\+\).*/\1/p'
}

# ---------------------------
# Initial Checks
# ---------------------------
# Check privileges and dependencies
if [[ "$EUID" -ne 0 ]]; then
  for cmd in e4defrag findmnt; do
    if ! sudo -n "$cmd" --help &>/dev/null; then
      log "ERROR: Missing passwordless sudo permission for $cmd"
      exit 1
    fi
  done
else
  log "INFO: Running with root privileges"
fi

# Lock file handling
if [ -f "$LOCK_FILE" ]; then
    log "ERROR: Script already running (lock file exists)"
    exit 1
fi

touch "$LOCK_FILE"
trap 'rm -f "$LOCK_FILE"' EXIT

# Check dependencies
for cmd in e4defrag findmnt; do
    if ! command -v "$cmd" &>/dev/null; then
        log "ERROR: Missing required command: $cmd"
        exit 1
    fi
done

# ---------------------------
# Main Script
# ---------------------------
log "Starting ext4 defragmentation check"

# Get all ext4 mount points
mapfile -t ext4_mounts < <(sudo findmnt -t ext4 -n -o TARGET)

if [[ ${#ext4_mounts[@]} -eq 0 ]]; then
    log "No ext4 filesystems mounted. Exiting."
    exit 0
fi

# Process each ext4 filesystem
for mount_point in "${ext4_mounts[@]}"; do
    log "Processing $mount_point"
    
    # Skip read-only filesystems
    if sudo findmnt -no OPTIONS "$mount_point" | grep -q ro; then
        log "Skipping read-only filesystem: $mount_point"
        continue
    fi

    # Get fragmentation score
    frag_score=$(get_frag_score "$mount_point")
    
    if [[ -z "$frag_score" ]]; then
        log "ERROR: Failed to get fragmentation score for $mount_point"
        continue
    fi

    log "Fragmentation score: $frag_score (Threshold: $THRESHOLD)"
    
    # Defrag condition check
    if [[ "$frag_score" -ge "$THRESHOLD" ]]; then
        log "Starting defragmentation for $mount_point"
        if sudo e4defrag -v "$mount_point" >> "$LOG_FILE" 2>&1; then
            log "Defragmentation completed successfully for $mount_point"
        else
            log "ERROR: Defragmentation failed for $mount_point"
        fi
    else
        log "No defragmentation needed for $mount_point"
    fi
done

log "All ext4 filesystems processed"
exit 0
