#!/bin/bash
set -euo pipefail

# ---------------------------
# Configuration
# ---------------------------
THRESHOLD=30               # Defrag if fragmentation score >=30 (0-100 scale)
LOG_FILE="/var/log/ext4_defrag.log"
LOCK_FILE="/tmp/ext4_defrag.lock"

# ---------------------------
# Functions
# ---------------------------
log() {
    echo "$(date +'%Y-%m-%d %H:%M:%S') - $1" | sudo tee -a "$LOG_FILE" >/dev/null
}

get_frag_score() {
    local mount_point="$1"
    local output
    output=$(sudo e4defrag -c "$mount_point" 2>&1)
    echo "$output" | grep -oP 'Fragmentation score\s+\K\d+'
}

# ---------------------------
# Initial Checks
# ---------------------------
# Check root privileges
if [[ $EUID -ne 0 ]]; then
    echo "ERROR: This script must be run with sudo" | sudo tee -a "$LOG_FILE"
    exit 1
fi

# Check lock file
if [ -f "$LOCK_FILE" ]; then
    log "ERROR: Script already running (lock file exists)"
    exit 1
fi
sudo touch "$LOCK_FILE"
trap 'sudo rm -f "$LOCK_FILE"' EXIT

# Check dependencies
if ! command -v e4defrag &>/dev/null || ! command -v lsblk &>/dev/null; then
    log "ERROR: Missing required commands (e4defrag or lsblk)"
    exit 1
fi

# ---------------------------
# Main Script
# ---------------------------
log "Starting ext4 defragmentation check"

# Get all ext4 mount points
mapfile -t ext4_mounts < <(lsblk -f -o FSTYPE,MOUNTPOINT | awk '$1 == "ext4" && $2 != "" {print $2}')

if [[ ${#ext4_mounts[@]} -eq 0 ]]; then
    log "No ext4 filesystems mounted. Exiting."
    exit 0
fi

# Process each ext4 filesystem
for mount_point in "${ext4_mounts[@]}"; do
    log "Processing $mount_point"
    
    # Skip read-only filesystems
    if findmnt -no OPTIONS "$mount_point" | grep -q ro; then
        log "Skipping read-only filesystem: $mount_point"
        continue
    fi

    # Get fragmentation score
    frag_score=$(get_frag_score "$mount_point")
    
    if [[ -z "$frag_score" ]]; then
        log "ERROR: Failed to get fragmentation score for $mount_point"
        continue
    fi

    log "Fragmentation score: $frag_score (Threshold: $THRESHOLD)"
    
    # Defrag condition check
    if [[ "$frag_score" -ge "$THRESHOLD" ]]; then
        log "Starting defragmentation for $mount_point"
        if sudo e4defrag -v "$mount_point" | sudo tee -a "$LOG_FILE"; then
            log "Defragmentation completed successfully for $mount_point"
        else
            log "ERROR: Defragmentation failed for $mount_point"
        fi
    else
        log "No defragmentation needed for $mount_point"
    fi
done

log "All ext4 filesystems processed"
exit 0
